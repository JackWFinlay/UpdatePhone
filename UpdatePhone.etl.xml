<!DOCTYPE etl SYSTEM "http://scriptella.javaforge.com/dtd/etl.dtd">
<etl>
  <connection id="numbers" driver="csv" url="numbers.csv"/>
  <connection id="groovy" driver="script">language=groovy</connection>

    <query connection-id="numbers">
      <!--Empty query means select all-->
      <script connection-id="groovy">
        import org.slf4j.Logger
        import org.slf4j.LoggerFactory
        import wslite.soap.*

        Logger logger = LoggerFactory.getLogger("UpdatePhone");

        Properties properties = new Properties()
        File propsFile = new File('UpdatePhone.properties')
        properties.load(propsFile.newDataInputStream())

        logger.debug("Loaded properties file")

        String hostname = properties.getProperty('hostname')
        String username = properties.getProperty('username')
        String password = properties.getProperty('password')

        logger.debug("Populated fields from properties file")

        SOAPClient wsClient = new SOAPClient(hostname)

        String rawID = "${etl.getParameter('Line Description')}"

        if (rawID.contains("!")){ // Viable line description

          String[] s = rawID.split("!")
          String personID = s[1]

          logger.debug("Extracted UPI: \"" + personID + "\" from entry" + rawID)

          String contactDetail = "${etl.getParameter('Line No')}"
          String phoneType = "Campus"

          logger.info("Updating element personID: " + personID +
              ", contactDetail: " + contactDetail + ", phoneType: " + phoneType)

          try {

            def eprUserDataResponse = wsClient.send(connectTimeout: 5000, readTimeout: 15000) {

              envelopeAttributes "xmlns:auc": "http://www.auckland.ac.nz"
              version SOAPVersion.V1_1

              header {
                'wsse:Security'('soap-env:mustUnderstand': "1", 'xmlns:wsse': 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd', 'xmlns:wsu': 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd') {
                  'wsse:UsernameToken'('wsu:Id': "UsernameToken-4") {
                    'wsse:Username'(username)
                    'wsse:Password'('Type': 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText', password)
                    'wsse:Nonce'('EncodingType': 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary', new String(password.bytes.encodeBase64().toString()))
                    'wsu:Created'(new Date().format("yyyy-MM-dd'T'HH:mm:ss SSS"))
                    }
                  }
              }

              body {
                'auc:updatePhone'{
                  'auc:phoneType'(phoneType)
                  'auc:ArrayOfContactDetailPair' {
                    'auc:ContactDetailElem' {
                      'auc:personID'(personID)
                      'auc:contactDetail'(contactDetail)
                    }
                  }
                }
              }

            }


            if (((String) eprUserDataResponse).contains("statusCode=200")) {
              // Check for if update was successful

              logger.info("Update of record " + personID + " succeeded.")
            } else {

              logger.error("Update of record " + rawID +
                          "failed.\n" + ((String) eprUserDataResponse))
            }

          } catch (wslite.soap.SOAPClientException e){

            logger.error("Error occurred: {}", e)
          }


        } else { // Incompatible line description

          logger.info("Skipping entry \"" + rawID + "\", No UPI or bad format")

        }

    </script>
  </query>
</etl>
